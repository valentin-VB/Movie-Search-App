{"version":3,"file":"static/js/961.1976779a.chunk.js","mappings":"iRAEMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,qCACmBC,IAFrC,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAYA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,IAFjC,cACCG,EADD,yBAIEA,EAASC,KAAKG,QAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BU,GAAW,CAC9DC,OAAQ,CACNC,QAASX,EACTY,SAAU,QACVC,mBAAoB,qBALnB,cACCV,EADD,yBASEA,EAASC,MATX,kEAYA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBb,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAsC,CAC3DW,OAAQ,CACNC,QAASX,EACTY,SAAU,QACVG,MAAOA,KALN,cACCZ,EADD,yBASEA,EAASC,KAAKC,SAThB,kE,uJCsCP,UAnEA,WAAyB,IAAD,IACtB,GAAwCW,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,MAArC,eAAOK,EAAP,KAAeC,EAAf,KACQb,GAAYc,EAAAA,EAAAA,MAAZd,QAEFe,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAI,WAAYH,GACxB,IAAMI,EAAY,oBAAGJ,EAASK,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAyB7C,IAvBAC,EAAAA,EAAAA,YAAU,WACRX,GAAW,GAEX,IAAMY,EAAS,mCAAG,gHAEaxB,EAAAA,EAAAA,IAAkBC,GAF/B,OAERQ,EAFQ,OAGdC,EAAgBD,GAChBG,GAAW,GAJG,gDAMdM,QAAQO,KAAR,MANc,oCAUO3B,EAAAA,EAAAA,MAVP,QAURe,EAVQ,OAWdC,EAAUD,GAXI,mDAadK,QAAQO,KAAR,MAbc,iEAAH,qDAiBfD,GACD,GAAE,CAACvB,IAEiB,OAAjBQ,GAAoC,OAAXI,EAA7B,CAIA,IAAQa,EAAuDjB,EAAvDiB,MAAOC,EAAgDlB,EAAhDkB,YAAaC,EAAmCnB,EAAnCmB,SAAUC,EAAyBpB,EAAzBoB,aAAcC,EAAWrB,EAAXqB,OACpD,OACE,gCACGnB,IAAW,SAAC,IAAD,KACZ,SAAC,KAAD,CAASoB,GAAIX,EAAb,6BACA,UAAC,IAAD,YACE,0BACE,gBACEY,IAAKN,EACLO,IAAG,UAAKpB,EAAOqB,UAAZ,OAAuBrB,EAAOsB,aAAa,IAA3C,OAAgDR,QAGvD,UAAC,IAAD,YACE,wBAAKD,KACL,2CACgB,0BAAOG,QAEvB,sCACA,uBAAID,KACJ,mCACA,uBAAIE,EAAOM,KAAI,SAAAC,GAAI,gBAAOA,EAAKC,KAAZ,mBAGvB,SAAC,IAAD,CAAeP,GAAG,OAAlB,mBACA,SAAC,IAAD,CAAeA,GAAG,UAAlB,sBACA,SAAC,KAAD,CAAQQ,QAAS,CAAC9B,EAAcI,OA3BnC,CA8BF,C","sources":["Services/api.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c86633d198b2023a18dd77350f0e9072';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMoviebyId(movieId) {\n  const trendingMovies = await fetchTrendingMovies();\n  return trendingMovies.find(movie => movie.id === movieId);\n}\n\nexport async function fetchConfig() {\n  const response = await axios.get(\n    `${BASE_URL}configuration?api_key=${API_KEY}`\n  );\n  return response.data.images;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      append_to_response: 'credits,reviews',\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: query,\n    },\n  });\n\n  return response.data.results;\n}\n","import { NavLink, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchConfig, fetchMovieDetails } from 'Services/api';\nimport { useState, useEffect } from 'react';\nimport { Box } from 'components/Reusable Components/Box';\nimport Loader from 'components/Reusable Components/Loader';\nimport { StyledNavLink } from 'components/StyledNavLink/StyledNavLink';\n\nfunction MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [config, setConfig] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  console.log('location', location);\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const movieDetails = await fetchMovieDetails(movieId);\n        setMovieDetails(movieDetails);\n        setLoading(false);\n      } catch (error) {\n        console.warn(error);\n      }\n\n      try {\n        const config = await fetchConfig();\n        setConfig(config);\n      } catch (error) {\n        console.warn(error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (movieDetails === null || config === null) {\n    return;\n  }\n\n  const { title, poster_path, overview, vote_average, genres } = movieDetails;\n  return (\n    <>\n      {loading && <Loader></Loader>}\n      <NavLink to={backLinkHref}>Back to Movies</NavLink>\n      <Box>\n        <div>\n          <img\n            alt={title}\n            src={`${config.base_url}${config.poster_sizes[2]}${poster_path}`}\n          />\n        </div>\n        <Box>\n          <h1>{title}</h1>\n          <p>\n            Average Vote: <span>{vote_average}</span>\n          </p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Gener</h3>\n          <p>{genres.map(genr => `${genr.name},  `)}</p>\n        </Box>\n      </Box>\n      <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n      <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n      <Outlet context={[movieDetails, config]} />\n    </>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","axios","response","data","results","fetchConfig","images","fetchMovieDetails","movieId","params","api_key","language","append_to_response","fetchMovieByQuery","query","useState","movieDetails","setMovieDetails","loading","setLoading","config","setConfig","useParams","location","useLocation","console","log","backLinkHref","state","from","useEffect","fetchData","warn","title","poster_path","overview","vote_average","genres","to","alt","src","base_url","poster_sizes","map","genr","name","context"],"sourceRoot":""}