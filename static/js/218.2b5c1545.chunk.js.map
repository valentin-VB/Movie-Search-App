{"version":3,"file":"static/js/218.2b5c1545.chunk.js","mappings":"iRAEMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,qCACmBC,IAFrC,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAYA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,IAFjC,cACCG,EADD,yBAIEA,EAASC,KAAKG,QAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BU,GAAW,CAC9DC,OAAQ,CACNC,QAASX,EACTY,SAAU,QACVC,mBAAoB,qBALnB,cACCV,EADD,yBASEA,EAASC,MATX,kEAYA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBb,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAsC,CAC3DW,OAAQ,CACNC,QAASX,EACTY,SAAU,QACVG,MAAOA,KALN,cACCZ,EADD,yBASEA,EAASC,KAAKC,SAThB,kE,+JCMP,MArCA,WACE,OAA4BW,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,GAEX,IAAME,EAAS,mCAAG,8GAEerB,EAAAA,EAAAA,MAFf,OAERsB,EAFQ,OAGdL,EAAUK,GACVH,GAAW,GAJG,gDAMdI,QAAQC,KAAR,MANc,yDAAH,qDAafH,GACD,GAAE,KAGD,gCACGH,IAAW,SAACO,EAAA,EAAD,KACZ,wBACGT,EAAOU,OAAS,GACfV,EAAOW,KAAI,SAAAC,GAAK,OACd,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAA9B,SAAqCF,EAAMG,SADpCH,EAAME,GADD,QAQzB,EC9BD,MATA,WACE,OACE,iCACE,uDACA,SAAC,EAAD,IAFF,MAKH,C","sources":["Services/api.js","components/TrendingList/TrendingList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c86633d198b2023a18dd77350f0e9072';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMoviebyId(movieId) {\n  const trendingMovies = await fetchTrendingMovies();\n  return trendingMovies.find(movie => movie.id === movieId);\n}\n\nexport async function fetchConfig() {\n  const response = await axios.get(\n    `${BASE_URL}configuration?api_key=${API_KEY}`\n  );\n  return response.data.images;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      append_to_response: 'credits,reviews',\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: query,\n    },\n  });\n\n  return response.data.results;\n}\n","import { fetchTrendingMovies } from '../../Services/api';\nimport { NavLink } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport Loader from 'components/Reusable Components/Loader';\n\nfunction TrendingList() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const TrendingMovies = await fetchTrendingMovies();\n        setMovies(TrendingMovies);\n        setLoading(false);\n      } catch (error) {\n        console.warn(error);\n      }\n\n      // console.log('TrandingMovies', TrandingMovies);\n      // console.log('fetchTrendingMovies();', fetchTrendingMovies());\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      {loading && <Loader></Loader>}\n      <ul>\n        {movies.length > 0 &&\n          movies.map(movie => (\n            <li key={movie.id}>\n              <NavLink to={`/movies/${movie.id}`}>{movie.title}</NavLink>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n}\nexport default TrendingList;\n","import TrendingList from 'components/TrendingList';\n\nfunction Home() {\n  return (\n    <>\n      <h1>Trending Movies this Week</h1>\n      <TrendingList></TrendingList>;\n    </>\n  );\n}\n\nexport default Home;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","axios","response","data","results","fetchConfig","images","fetchMovieDetails","movieId","params","api_key","language","append_to_response","fetchMovieByQuery","query","useState","movies","setMovies","loading","setLoading","useEffect","fetchData","TrendingMovies","console","warn","Loader","length","map","movie","to","id","title"],"sourceRoot":""}