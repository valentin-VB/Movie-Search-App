{"version":3,"file":"static/js/678.0270b8eb.chunk.js","mappings":"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","sources":["Services/api.js","components/Button/Button.styled.js","components/Button/Button.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","components/MoviesList.jsx/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c86633d198b2023a18dd77350f0e9072';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMoviebyId(movieId) {\n  const trendingMovies = await fetchTrendingMovies();\n  return trendingMovies.find(movie => movie.id === movieId);\n}\n\nexport async function fetchConfig() {\n  const response = await axios.get(\n    `${BASE_URL}configuration?api_key=${API_KEY}`\n  );\n  return response.data.images;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      append_to_response: 'credits,reviews',\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: query,\n    },\n  });\n\n  return response.data.results;\n}\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://cdn-icons-png.flaticon.com/512/639/639375.png');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { Btn } from 'components/Button/Button.styled';\n\nconst Button = () => {\n  return <Btn type=\"submit\"></Btn>;\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: gray;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n","import { useForm } from 'react-hook-form';\nimport Button from 'components/Button';\nimport { Header, Input, StyledForm } from './Searchbar.styled';\n\nconst Searchbar = ({ onSubmit }) => {\n  const { register, handleSubmit, reset } = useForm();\n\n  const handleSearchSubmit = data => {\n    if (data.searchQuery.trim() === '') {\n      return;\n    }\n\n    onSubmit(data.searchQuery);\n    reset();\n  };\n\n  return (\n    <Header>\n      <StyledForm\n        onSubmit={handleSubmit(data => {\n          handleSearchSubmit(data);\n        })}\n      >\n        <Input\n          {...register('searchQuery')}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        ></Input>\n        <Button></Button>\n      </StyledForm>\n    </Header>\n  );\n};\n\nexport default Searchbar;\n","import { NavLink, useLocation } from 'react-router-dom';\n\nfunction MoviesList({ movies, query }) {\n  const location = useLocation();\n  if (movies.length === 0 && query !== '') {\n    return <p>Sorry, no movie found for this search query</p>;\n  }\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <NavLink to={`${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default MoviesList;\n","import Searchbar from 'components/Searchbar';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieByQuery } from 'Services/api';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Reusable Components/Loader';\nimport MoviesList from 'components/MoviesList.jsx/MoviesList';\n\nfunction Movies() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n\n    setLoading(true);\n    const fetchData = async () => {\n      try {\n        const result = await fetchMovieByQuery(searchQuery);\n        setMovies(result);\n        setLoading(false);\n      } catch (error) {\n        console.warn(error);\n      }\n    };\n\n    fetchData();\n  }, [searchQuery]);\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query: query });\n    setMovies([]);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n      {loading ? (\n        <Loader></Loader>\n      ) : (\n        searchQuery !== '' && (\n          <MoviesList query={searchQuery} movies={movies}></MoviesList>\n        )\n      )}\n    </>\n  );\n}\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","axios","response","data","results","fetchConfig","images","fetchMovieDetails","movieId","params","api_key","language","append_to_response","fetchMovieByQuery","query","Btn","styled","type","StyledForm","Input","Header","onSubmit","useForm","register","handleSubmit","reset","searchQuery","trim","handleSearchSubmit","autoComplete","autoFocus","placeholder","movies","location","useLocation","length","map","movie","to","id","state","from","title","useState","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchData","result","console","warn","Loader"],"sourceRoot":""}